from pathlib import Path
import shutil
import pandas as pd

SAMPLE_TABLE = pd.read_csv(config["input"]["sample table"], index_col="sample", sep="\t")
SAMPLE_TABLE.index = SAMPLE_TABLE.index.map(str)
SAMPLES = SAMPLE_TABLE.index.values


ORGANISMS = []
EXPERIMENTS = []
COMPARISONS = []
for org, exp_dict in config['Comparisons'].items():
    for exp, info in exp_dict.items():
        if 'Design' in info.keys():
            if 'Included Samples' in info.keys() or 'Excluded Samples' in info.keys():
                for comp in info['Comparisons'].keys():
                    ORGANISMS.append(org)
                    EXPERIMENTS.append(exp)
                    COMPARISONS.append(comp)
            else:
                raise ValueError(f"comparison for organism {org} and experiment {exp} does not include an included or excluded samples list (must update config file)")
        else:
            raise ValueError(f"comparison for organism {org} and experiment {exp} does not include design (must update config file)")

scratch_dir = Path(config["scratch directory"])
results_dir = Path(config["results directory"])

scratch_dict = {
    "done_files": scratch_dir / "done_files",
    "trimmed_reads": scratch_dir / "trimmed_reads",
    "concat_gff": {
        "concat_gff_file": scratch_dir
        / "concat_gff"
        / "concat_gff.gff",
        "concat_gff_mod_file": scratch_dir
        / "concat_gff"
        / "concat_gff_mod.gff",
    },
    "concat_genome": {
        "concat_genome_file": scratch_dir
        / "concat_genome"
        / "concat_genome.fna",
        "concat_genome_done": scratch_dir
        / "concat_genome"
        / "indexed.done",
    },
    "mapped_reads": scratch_dir / "mapped_reads",
    "feature_count": scratch_dir / "HTseq",
    "genome_index_parent": scratch_dir / "genome_index",
    "library_count": scratch_dir
    / "raw_library_counts"
    / "library_len.tsv",
    "coverage_positions": scratch_dir / "coverage_positions",
    "fastqc": scratch_dir / "fastqc",
}

results_dict = {
    "bio_db_ref": results_dir / "tables" / "bio_db_ref.tsv",
    "raw_counts": results_dir / "tables" / "raw_counts.tsv",
    "counts_w_annotations": results_dir / "tables" / "raw_counts_w_annotations.tsv",
    "annotations": results_dir / "tables" / "annotations.tsv",
    "mapping_metadata": results_dir / "metadata" / "mapping_metadata.tsv",
    "organism_occurance": results_dir / "metadata" / "organism_occurance.tsv",
    "gene_sparsity": results_dir / "metadata" / "gene_sparsity.tsv",
    "DEseq2": results_dir / "DEseq2",
    "data_json": results_dir / f"{config['experiment_name']}.json.gz",
}

rule all:
    input:
        results_dict['data_json']

include: "rules/counting_features.smk"
include: "rules/genome_concat.smk"
include: "rules/gff_tools.smk"

if config["aligner"] == "bwa":

    include: "rules/map_reads_bwa.smk"


if config["aligner"] == "bowtie2":

    include: "rules/map_reads_bowtie2.smk"


include: "rules/post_count_analysis.smk"


include: "rules/run_trim.smk"


include: "rules/samtools.smk"


include: "rules/unzip.smk"


include: "rules/fastqc.smk"
